syntax = "proto3";
package nucleic.rollapp;

option go_package = "github.com/nucleic-network/nucleic/x/rollapp/types";

import "gogoproto/gogo.proto";
import "nucleic/rollapp/block_descriptor.proto";
import "nucleic/rollapp/bank.proto";
import "nucleic/rollapp/rollapp.proto";

// Msg defines the Msg service.
service Msg {
  rpc CreateRollapp(MsgCreateRollapp) returns (MsgCreateRollappResponse);
  rpc UpdateState(MsgUpdateState) returns (MsgUpdateStateResponse);
  rpc TriggerGenesisEvent(MsgRollappGenesisEvent)
      returns (MsgRollappGenesisEventResponse);
}

// MsgCreateRollapp creates a new rollapp chain on the hub.
message MsgCreateRollapp {
  // creator is the bech32-encoded address of the rollapp creator
  string creator = 1;
  // rollapp_id is the unique identifier of the rollapp chain.
  // The rollapp_id follows the same standard as cosmos chain_id
  string rollapp_id = 2; // [(gogoproto.customname) = "ChainID"];
  // max_sequencers is the maximum number of sequencers
  uint64 max_sequencers = 6;
  // permissioned_addresses is a bech32-encoded address list of the
  // sequencers that are allowed to serve this rollapp_id.
  // In the case of an empty list, the rollapp is considered permissionless
  repeated string permissioned_addresses = 7;
  // metadata provides the client information for all the registered tokens.
  repeated TokenMetadata metadatas = 8 [ (gogoproto.nullable) = false ];
  // genesis_accounts for the rollapp on the hub
  repeated GenesisAccount genesis_accounts = 9 [ (gogoproto.nullable) = false ];
}

message MsgCreateRollappResponse {}

// MsgUpdateState updates a rollapp state with a block batch.
// a block batch is a list of ordered blocks (by height)
message MsgUpdateState {
  // creator is the bech32-encoded address of the sequencer sending the update
  string creator = 1;
  // rollapp_id is the rollapp that the sequencer belongs to and asking to update
  // The rollapp_id follows the same standard as cosmos chain_id
  string rollapp_id = 2;
  // start_height is the block height of the first block in the batch
  uint64 start_height = 3;
  // num_blocks is the number of blocks included in this batch update
  uint64 num_blocks = 4;
  // da_path is the description of the location on the DA layer
  string da_path = 5;
  // version is the version of the rollapp
  uint64 version = 6;
  // block_descs is a list of block description objects (one per block)
  // the list must be ordered by height, starting from start_height to
  // start_height+num_blocks-1
  BlockDescriptors block_descs = 7 [ (gogoproto.nullable) = false ];
}

message MsgUpdateStateResponse {}

// MsgRollappGenesisEvent is the message type for triggering the genesis event
// of the rollapp
message MsgRollappGenesisEvent {
  // address is the bech32-encoded address of the sender
  string address = 1;
  // channel_id is the rollapp channel id on the hub
  string channel_id = 2;
  // rollapp_id is the rollapp id we want to mint tokens on the hub.
  // Used for validation against channel_id to reduce error surface.
  string rollapp_id = 3;
}

message MsgRollappGenesisEventResponse {}
